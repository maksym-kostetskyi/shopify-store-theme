{% comment %}
  Product page with main image, thumbnail gallery, and product info
  Features a responsive and robust Swiper.js gallery for thumbnails.
  - Correctly handles responsive breakpoints for thumbnails.
  - Slides one thumbnail at a time without cropping.
  - Automatically disables navigation buttons at the start/end.
{% endcomment %}

<div class="product-page" 
     data-section-id="{{ section.id }}"
     data-slides-desktop="{{ section.settings.slides_per_view_desktop | default: 4 }}"
  data-slides-tablet="{{ section.settings.slides_per_view_tablet | default: 3 }}"
  data-slides-mobile="{{ section.settings.slides_per_view_mobile | default: 2 }}"
     data-enable-navigation="{{ section.settings.enable_navigation | default: true }}"
     data-space-between="{{ section.settings.space_between_slides | default: 10 }}">
  
  <div class="product-container">
    <div class="product-images-section">
      
      {% if product and product.images.size > 0 %}
        <div class="product-main-image">
          <img 
            id="main-product-image"
            src="{{ product.featured_image | image_url: width: 800 }}" 
            alt="{{ product.featured_image.alt | escape }}"
            width="800"
            height="800"
            class="main-image"
            loading="eager"
          >
          {% if section.settings.enable_navigation and product.images.size > 1 %}
            <div class="main-image-prev" data-direction="prev"></div>
            <div class="main-image-next" data-direction="next"></div>
          {% endif %}
        </div>
        
        {% if product.images.size > 1 %}
          <div class="product-thumbnails">
            <div class="swiper thumbnail-swiper">
              <div class="swiper-wrapper">
                {% for image in product.images %}
                  <div class="swiper-slide">
                    <div class="thumbnail-wrapper {% if forloop.first %}active{% endif %}">
                      <img 
                        src="{{ image | image_url: width: 150 }}" 
                        alt="{{ image.alt | escape }}"
                        class="thumbnail-image"
                        data-main-image="{{ image | image_url: width: 800 }}"
                        data-index="{{ forloop.index0 }}"
                        loading="lazy"
                        width="150"
                        height="150"
                      >
                    </div>
                  </div>
                {% endfor %}
              </div>
              
              {% if section.settings.enable_pagination %}
                <div class="swiper-pagination thumbnail-pagination"></div>
              {% endif %}
            </div>
          </div>
        {% endif %}
      {% else %}
        <div class="product-image-placeholder">
          <div class="placeholder-wrapper">
            {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
            <p class="placeholder-text">
              {% if product %}
                No product images available
              {% else %}
                Please select a product to view
              {% endif %}
            </p>
          </div>
        </div>
      {% endif %}
    </div>

    <div class="product-info-section">
      <div class="product-info">
        <h1 class="product-title">{{ product.title }}</h1>
        
        <div class="product-price">
          <span class="current-price">{{ product.price | money }}</span>
          {% if product.compare_at_price > product.price %}
            <span class="compare-price">{{ product.compare_at_price | money }}</span>
            <span class="savings">Save {{ product.compare_at_price | minus: product.price | money }}</span>
          {% endif %}
        </div>
        
        {% if product.description != blank %}
          <div class="product-description">
            {{ product.description }}
          </div>
        {% endif %}
        
        <div class="product-form">
          {% form 'product', product %}
            {% assign current_variant = product.selected_or_first_available_variant %}

            {% if product.variants.size > 1 %}
              <div class="variant-selector">
                <label for="variant-select">Options:</label>
                <select name="id" id="variant-select" class="variant-select">
                  {% for variant in product.variants %}
                    <option
                      value="{{ variant.id }}"
                      {% if variant == current_variant %}selected="selected"{% endif %}
                      {% unless variant.available %}disabled{% endunless %}
                    >
                      {{ variant.title }} - {{ variant.price | money }}
                      {% unless variant.available %} (Sold Out){% endunless %}
                    </option>
                  {% endfor %}
                </select>
              </div>
            {% else %}
              <input type="hidden" name="id" value="{{ current_variant.id }}">
            {% endif %}

            {% if current_variant.available %}
              <div class="quantity-cart-row">
                <div class="quantity-selector">
                  <label for="quantity">Quantity:</label>
                  <input type="number" name="quantity" id="quantity" min="1" value="1" class="quantity-input">
                </div>
                <button type="submit" class="add-to-cart-btn">
                  Add to Cart
                </button>
              </div>
            {% else %}
              <button type="submit" class="add-to-cart-btn" disabled>
                Sold Out
              </button>
            {% endif %}
            
          {% endform %}
        </div>
      </div>
    </div>
  </div>
</div>

{% stylesheet %}
  /* Product Page Layout */
  .product-page {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }
  
  .product-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    align-items: start;
  }
  
  /* Product Images Section */
  .product-images-section {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    max-width: 450px; /* Constrain the width of the image column */
    width: 100%;
  }
  
  .product-main-image {
    width: 100%;
    height: auto;
    overflow: hidden;
    border-radius: 12px;
    background: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    aspect-ratio: 1 / 1;
  }
  
  .main-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
    cursor: zoom-in;
    border-radius: 8px;
  }
  
  /* Main Image Navigation Arrows */
  .main-image-prev,
  .main-image-next {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 40px;
    height: 40px;
    background: rgba(255, 255, 255, 0.9);
    border-radius: 50%;
    color: #333;
    font-size: 16px;
    font-weight: bold;
    z-index: 10;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    opacity: 0;
    pointer-events: none;
  }
  
  .product-main-image:hover .main-image-prev,
  .product-main-image:hover .main-image-next {
    opacity: 1;
    pointer-events: auto;
  }
  
  .main-image-prev:hover,
  .main-image-next:hover {
    background: white;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  .main-image-prev {
    left: 15px;
  }
  
  .main-image-next {
    right: 15px;
  }
  
  .main-image-prev::after {
    content: '←';
  }
  
  .main-image-next::after {
    content: '→';
  }
  
  /* Swiper's default disabled class for navigation */
  .main-image-prev.swiper-button-disabled,
  .main-image-next.swiper-button-disabled {
    opacity: 0.3 !important;
    cursor: not-allowed;
    pointer-events: none !important;
  }
  
  /* Thumbnail Gallery */
  .product-thumbnails {
    width: 100%;
    position: relative;
    overflow: hidden;
  }
  
  .thumbnail-swiper {
    width: 100%;
    padding: 0;
    overflow: hidden;
  }

  .thumbnail-swiper .swiper-slide {
    flex-shrink: 0;
  }
  
  .thumbnail-wrapper {
    width: 100%;
    height: auto;
    aspect-ratio: 1 / 1;
    border-radius: 8px;
    overflow: hidden;
    border: 2px solid transparent;
    cursor: pointer;
    transition: all 0.3s ease;
    background: #f5f5f5;
    flex-shrink: 0;
  }
  
  .thumbnail-wrapper:hover {
    border-color: #007aff;
    transform: scale(1.05);
  }
  
  .thumbnail-wrapper.active {
    border-color: #007aff;
    box-shadow: 0 0 0 1px #007aff;
  }
  
  .thumbnail-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    border-radius: 6px;
  }
  
  /* thumbnail pagination removed */
  
  /* Product Info Section */
  .product-info-section {
    padding: 1rem 0;
  }
  
  .product-title {
    font-size: 2rem;
    margin-bottom: 15px;
  }
  
  .product-price .current-price {
    font-size: 1.75rem;
    font-weight: 700;
    color: #007aff;
  }
  
  .product-description {
    line-height: 1.6;
    margin-bottom: 15px;
  }
  
  .product-form {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  .quantity-cart-row {
    display: flex;
    gap: 1rem;
    align-items: end;
  }
  
  .add-to-cart-btn {
    background: #007aff;
    color: white;
    border: none;
    padding: 1rem 2rem;
    border-radius: 6px;
    font-size: 1.125rem;
    cursor: pointer;
  }
  
  .add-to-cart-btn:hover:not(:disabled) {
    background: #0056cc;
  }
  
  .add-to-cart-btn:disabled {
    background: #ccc;
    cursor: not-allowed;
  }
  
  /* Responsive Design */
  @media screen and (max-width: 768px) {
    .product-page {
      padding: 1rem;
    }
    .product-container {
      grid-template-columns: 1fr;
      gap: 2rem;
    }
    .product-images-section {
      max-width: 80vw; /* Allow image column to fill width */
    }
  }
{% endstylesheet %}

{% javascript %}
  // Global gallery object to avoid sandbox issues
  window.productGallery = {
    mainImage: null,
    thumbnailSwiper: null,
    currentIndex: 0,
    totalImages: 0,
    
    init: function() {
      const productPage = document.querySelector('.product-page');
      if (!productPage || !document.querySelector('.thumbnail-swiper')) {
        return; // Exit if no gallery is on the page
      }
      
      this.mainImage = document.querySelector('#main-product-image');
      this.totalImages = document.querySelectorAll('.thumbnail-image').length;
      
      // Load Swiper.js script if not already available
      if (!window.Swiper) {
        const script = document.createElement('script');
        script.src = 'https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js';
        script.onload = () => this.createSwiper(productPage);
        document.head.appendChild(script);

        const link = document.createElement('link');
        link.rel = 'stylesheet';
        link.href = 'https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css';
        document.head.appendChild(link);
      } else {
        this.createSwiper(productPage);
      }
    },
    
    createSwiper: function(productPage) {
      const thumbnailContainer = document.querySelector('.thumbnail-swiper');
      
      // Get settings from Liquid data attributes
      const slidesDesktop = parseInt(productPage.dataset.slidesDesktop, 10);
      const slidesTablet = parseInt(productPage.dataset.slidesTablet, 10);
      const slidesMobile = parseInt(productPage.dataset.slidesMobile, 10);
      const spaceBetween = parseInt(productPage.dataset.spaceBetween, 10);

      this.thumbnailSwiper = new Swiper(thumbnailContainer, {
        loop: false,
        spaceBetween: spaceBetween,
        grabCursor: true,
        watchOverflow: true,
        slidesPerGroup: 1,
        
        breakpoints: {
          0: { slidesPerView: slidesMobile },
          768: { slidesPerView: slidesTablet },
          1024: { slidesPerView: slidesDesktop },
        },
        
        // Navigation is now handled manually
        
        on: {
          // Sync state when user swipes thumbnails directly
          slideChange: (swiper) => {
            // Check if the change was initiated by our code to prevent loops
            if (swiper.activeIndex !== this.currentIndex) {
              this.switchToImage(swiper.activeIndex);
            }
          },
        }
      });
      
      // Setup thumbnail clicks and our custom navigation
      this.setupThumbnails();
      this.setupNavigation();
      this.updateNavState(); // Set initial state
    },
    
    // Function to handle custom navigation
    setupNavigation: function() {
        const nextBtn = document.querySelector('.main-image-next');
        const prevBtn = document.querySelector('.main-image-prev');

        if (nextBtn) {
            nextBtn.addEventListener('click', () => {
                if (this.currentIndex < this.totalImages - 1) {
                    this.switchToImage(this.currentIndex + 1);
                }
            });
        }
        if (prevBtn) {
            prevBtn.addEventListener('click', () => {
                if (this.currentIndex > 0) {
                    this.switchToImage(this.currentIndex - 1);
                }
            });
        }
    },
    
    setupThumbnails: function() {
      const thumbnails = document.querySelectorAll('.thumbnail-image');
      thumbnails.forEach((thumbnail) => {
        thumbnail.addEventListener('click', (event) => {
          const index = parseInt(event.currentTarget.dataset.index, 10);
          this.switchToImage(index);
        });
      });
    },

    // Central function to update everything
    switchToImage: function(index) {
        this.currentIndex = index;
        
        // Update the main image
        this.updateMainImage(this.currentIndex);
        
        // Move the thumbnail slider
        if (this.thumbnailSwiper) {
            this.thumbnailSwiper.slideTo(this.currentIndex);
        }
        
        // Update the state of our navigation buttons
        this.updateNavState();
    },
    
    updateMainImage: function(activeIndex) {
      if (!this.mainImage) return;

      const thumbnails = document.querySelectorAll('.thumbnail-image');
      const activeThumbnail = thumbnails[activeIndex];
      
      if (activeThumbnail) {
        this.mainImage.src = activeThumbnail.dataset.mainImage;
        this.mainImage.alt = activeThumbnail.alt;
      }
      
      const thumbnailWrappers = document.querySelectorAll('.thumbnail-wrapper');
      thumbnailWrappers.forEach((wrapper, index) => {
        wrapper.classList.toggle('active', index === activeIndex);
      });
    },

    // NEW: Function to manually control button disabled state
    updateNavState: function() {
        const nextBtn = document.querySelector('.main-image-next');
        const prevBtn = document.querySelector('.main-image-prev');
        if (!nextBtn || !prevBtn) return;

        // Handle Previous Button
        if (this.currentIndex === 0) {
            prevBtn.classList.add('swiper-button-disabled');
        } else {
            prevBtn.classList.remove('swiper-button-disabled');
        }

        // Handle Next Button
        if (this.currentIndex === this.totalImages - 1) {
            nextBtn.classList.add('swiper-button-disabled');
        } else {
            nextBtn.classList.remove('swiper-button-disabled');
        }
    }
  };

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => window.productGallery.init());
  } else {
    window.productGallery.init();
  }
{% endjavascript %}

{% schema %}
{
  "name": "Product Gallery",
  "settings": [
    {
      "type": "header",
      "content": "Thumbnail Gallery Settings"
    },
    {
      "type": "range",
      "id": "slides_per_view_desktop",
      "label": "Thumbnails per row (Desktop)",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 4,
      "info": "Number of thumbnail images shown at once on screens wider than 1024px"
    },
    {
      "type": "range",
      "id": "slides_per_view_tablet",
      "label": "Thumbnails per row (Tablet)",
      "min": 2,
      "max": 4,
      "step": 1,
      "default": 3,
      "info": "Number of thumbnail images shown at once on screens wider than 768px"
    },
    {
      "type": "range",
      "id": "slides_per_view_mobile",
      "label": "Thumbnails per row (Mobile)",
      "min": 2,
      "max": 5,
      "step": 1,
      "default": 2,
      "info": "Number of thumbnail images shown at once on mobile screens"
    },
    {
      "type": "header",
      "content": "Navigation Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_pagination",
      "label": "Show pagination dots",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_navigation",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "header",
      "content": "Layout Settings"
    },
    {
      "type": "range",
      "id": "space_between_slides",
      "label": "Space between thumbnails",
      "min": 5,
      "max": 30,
      "step": 1,
      "unit": "px",
      "default": 10
    }
  ],
  "presets": [
    {
      "name": "Product Gallery",
      "category": "Product"
    }
  ]
}
{% endschema %}